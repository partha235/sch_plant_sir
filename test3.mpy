try:
    import usocket as socket
except:
    import socket

from time import sleep_ms,sleep
from machine import Pin,ADC
import network
import dht
import machine

import esp
esp.osdebug(None)

import gc
gc.collect()

# Pin connections
SOIL_TEMP_PIN = 15 
WATER_LEVEL_PIN = 25 
DHT_PIN = 34

dht_sensor = dht.DHT22(machine.Pin(DHT_PIN))
water_level_sensor = ADC(Pin(WATER_LEVEL_PIN))
soil_temp_sensor = ADC(Pin(SOIL_TEMP_PIN))

ssid = 'bike2'
password = '12345678'

def connect_to_wifi():
    sta_if = network.WLAN(network.STA_IF)
    if not sta_if.isconnected():
        print("Connecting to WiFi...")
        sta_if.active(True)
        sta_if.connect(WIFI_SSID, WIFI_PASSWORD)
        while not sta_if.isconnected():
            pass
    print("Connected to WiFi:", sta_if.ifconfig())


def read_sensors():
    dht_sensor.measure()
    water_level = water_level_sensor.read()
    soil_temp = soil_temp_sensor.read()
    return {
        "temperature": dht_sensor.temperature(),
        "humidity": dht_sensor.humidity(),
        "water_level": water_level,
        "soil_temperature": soil_temp
    }

def web_page():
    html = """<<html>
<head>
    <title>Plant Data</title>
</head>
<body>
    <h1>Plant Data</h1>
    <p>Temperature: {} C</p>
    <p>Humidity: {} %</p>
    <p>Water Level: {}</p>
    <p>Soil Temperature: {}</p>
</body>
</html>
""".format(response_data["temperature"], response_data["humidity"], response_data["water_level"], response_data["soil_temperature"])
    return html

s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind(('', 80))
s.listen(5)

while True:
    connect_to_wifi()
    web_page()
    conn, addr = s.accept()
    conn.settimeout(3.0)
    print('Got a connection from %s' % str(addr))
    request = conn.recv(1024)
    conn.settimeout(None)
    request = str(request)
    print('Content = %s' % request)
    print("HI")
    sleep_ms(200)
    response = web_page()
    conn.send('HTTP/1.1 200 OK\n')
    conn.send('Content-Type: text/html\n')
    conn.send('Connection: close\n\n')
    conn.sendall(response)
    conn.close()